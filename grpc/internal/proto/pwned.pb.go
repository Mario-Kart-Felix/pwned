// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pwned.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	pwned.proto

It has these top-level messages:
	LookupRequest
	LookupResponse
	RangeRequest
	RangeResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type LookupRequest struct {
	Digest []byte `protobuf:"bytes,1,opt,name=digest,proto3" json:"digest,omitempty"`
}

func (m *LookupRequest) Reset()                    { *m = LookupRequest{} }
func (m *LookupRequest) String() string            { return proto1.CompactTextString(m) }
func (*LookupRequest) ProtoMessage()               {}
func (*LookupRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *LookupRequest) GetDigest() []byte {
	if m != nil {
		return m.Digest
	}
	return nil
}

type LookupResponse struct {
	Count uint32 `protobuf:"varint,1,opt,name=count" json:"count,omitempty"`
}

func (m *LookupResponse) Reset()                    { *m = LookupResponse{} }
func (m *LookupResponse) String() string            { return proto1.CompactTextString(m) }
func (*LookupResponse) ProtoMessage()               {}
func (*LookupResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *LookupResponse) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type RangeRequest struct {
	// Prefix is hex encoded.
	Prefix string `protobuf:"bytes,1,opt,name=prefix" json:"prefix,omitempty"`
}

func (m *RangeRequest) Reset()                    { *m = RangeRequest{} }
func (m *RangeRequest) String() string            { return proto1.CompactTextString(m) }
func (*RangeRequest) ProtoMessage()               {}
func (*RangeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RangeRequest) GetPrefix() string {
	if m != nil {
		return m.Prefix
	}
	return ""
}

type RangeResponse struct {
	// The results format is:
	//  suffix0 || logcnt0 ||
	//  suffix1 || logcnt1 ||
	//  ... ||
	//  suffixN || logcntN
	// where logcntN is log2(countN).
	//
	// It's length is 18*N + N.
	Results []byte `protobuf:"bytes,1,opt,name=results,proto3" json:"results,omitempty"`
}

func (m *RangeResponse) Reset()                    { *m = RangeResponse{} }
func (m *RangeResponse) String() string            { return proto1.CompactTextString(m) }
func (*RangeResponse) ProtoMessage()               {}
func (*RangeResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RangeResponse) GetResults() []byte {
	if m != nil {
		return m.Results
	}
	return nil
}

func init() {
	proto1.RegisterType((*LookupRequest)(nil), "pwned.LookupRequest")
	proto1.RegisterType((*LookupResponse)(nil), "pwned.LookupResponse")
	proto1.RegisterType((*RangeRequest)(nil), "pwned.RangeRequest")
	proto1.RegisterType((*RangeResponse)(nil), "pwned.RangeResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Searcher service

type SearcherClient interface {
	Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error)
	Range(ctx context.Context, in *RangeRequest, opts ...grpc.CallOption) (*RangeResponse, error)
}

type searcherClient struct {
	cc *grpc.ClientConn
}

func NewSearcherClient(cc *grpc.ClientConn) SearcherClient {
	return &searcherClient{cc}
}

func (c *searcherClient) Lookup(ctx context.Context, in *LookupRequest, opts ...grpc.CallOption) (*LookupResponse, error) {
	out := new(LookupResponse)
	err := grpc.Invoke(ctx, "/pwned.Searcher/Lookup", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *searcherClient) Range(ctx context.Context, in *RangeRequest, opts ...grpc.CallOption) (*RangeResponse, error) {
	out := new(RangeResponse)
	err := grpc.Invoke(ctx, "/pwned.Searcher/Range", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Searcher service

type SearcherServer interface {
	Lookup(context.Context, *LookupRequest) (*LookupResponse, error)
	Range(context.Context, *RangeRequest) (*RangeResponse, error)
}

func RegisterSearcherServer(s *grpc.Server, srv SearcherServer) {
	s.RegisterService(&_Searcher_serviceDesc, srv)
}

func _Searcher_Lookup_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LookupRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearcherServer).Lookup(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pwned.Searcher/Lookup",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearcherServer).Lookup(ctx, req.(*LookupRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Searcher_Range_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RangeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SearcherServer).Range(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pwned.Searcher/Range",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SearcherServer).Range(ctx, req.(*RangeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Searcher_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pwned.Searcher",
	HandlerType: (*SearcherServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Lookup",
			Handler:    _Searcher_Lookup_Handler,
		},
		{
			MethodName: "Range",
			Handler:    _Searcher_Range_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pwned.proto",
}

func init() { proto1.RegisterFile("pwned.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 213 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2e, 0x28, 0xcf, 0x4b,
	0x4d, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x73, 0x94, 0xd4, 0xb9, 0x78, 0x7d,
	0xf2, 0xf3, 0xb3, 0x4b, 0x0b, 0x82, 0x52, 0x0b, 0x4b, 0x53, 0x8b, 0x4b, 0x84, 0xc4, 0xb8, 0xd8,
	0x52, 0x32, 0xd3, 0x53, 0x8b, 0x4b, 0x24, 0x18, 0x15, 0x18, 0x35, 0x78, 0x82, 0xa0, 0x3c, 0x25,
	0x35, 0x2e, 0x3e, 0x98, 0xc2, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x11, 0x2e, 0xd6, 0xe4,
	0xfc, 0xd2, 0x3c, 0x88, 0x42, 0xde, 0x20, 0x08, 0x47, 0x49, 0x8d, 0x8b, 0x27, 0x28, 0x31, 0x2f,
	0x3d, 0x15, 0xc9, 0xbc, 0x82, 0xa2, 0xd4, 0xb4, 0xcc, 0x0a, 0xb0, 0x32, 0xce, 0x20, 0x28, 0x4f,
	0x49, 0x93, 0x8b, 0x17, 0xaa, 0x0e, 0x6a, 0x9c, 0x04, 0x17, 0x7b, 0x51, 0x6a, 0x71, 0x69, 0x4e,
	0x49, 0x31, 0xd4, 0x66, 0x18, 0xd7, 0xa8, 0x92, 0x8b, 0x23, 0x38, 0x35, 0xb1, 0x28, 0x39, 0x23,
	0xb5, 0x48, 0xc8, 0x9c, 0x8b, 0x0d, 0xe2, 0x0c, 0x21, 0x11, 0x3d, 0x88, 0x77, 0x50, 0x9c, 0x2f,
	0x25, 0x8a, 0x26, 0x0a, 0x31, 0x5c, 0x89, 0x41, 0xc8, 0x84, 0x8b, 0x15, 0x6c, 0x9f, 0x90, 0x30,
	0x54, 0x05, 0xb2, 0x2b, 0xa5, 0x44, 0x50, 0x05, 0x61, 0xba, 0x9c, 0x38, 0x3d, 0x18, 0xa3, 0x58,
	0xc1, 0x01, 0x96, 0xc4, 0x06, 0xa6, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xd8, 0x6c, 0x27,
	0x45, 0x46, 0x01, 0x00, 0x00,
}
